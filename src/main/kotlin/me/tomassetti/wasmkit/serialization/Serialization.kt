package me.tomassetti.wasmkit.serialization

import me.tomassetti.wasmkit.Instruction
import me.tomassetti.wasmkit.InstructionType
import me.tomassetti.wasmkit.InstructionType.*
import me.tomassetti.wasmkit.nop
import me.tomassetti.wasmkit.unreachable
import me.tomassetti.wasmkit.*
import kotlin.reflect.KClass

val MAGIC_NUMBER = byteArrayOf(0x00, 0x61, 0x73, 0x6d)

val ELSE_BYTE = 0x05.toByte()

val END_BYTE = 0x0B.toByte()

val NON_PARAMETRIC_INSTRUCTIONS = mapOf(
        UNREACHABLE to unreachable,
        NOP to nop,
        RETURN to returnInstruction,
        DROP to drop,
        SELECT to select,
        I32EQZ to I32EqzInstruction,
        I64EQZ to I32EqzInstruction,
        I32CLZ to I32ClzInstruction,
        I32CTX to I32CtxInstruction,
        I32POPCNT to I32PopCntInstruction,
        I32ADD to I32AddInstruction,
        I32SUB to I32SubInstruction,
        I32MUL to I32MulInstruction,
        I32DIVS to I32DivSInstruction,
        I32DIVU to I32DivUInstruction,
        I32REMS to I32RemSInstruction,
        I32REMU to I32RemUInstruction,
        I32AND to I32AndInstruction,
        I32OR to I32OrInstruction,
        I32XOR to I32XorInstruction,
        I32SHL to I32ShlInstruction,
        I32SHRS to I32ShrsInstruction,
        I32SHRU to I32ShruInstruction,
        I32ROTL to I32RotlInstruction,
        I32ROTR to I32RotrInstruction,
        I64CLZ to I64ClzInstruction,
        I64CTX to I64CtxInstruction,
        I64POPCNT to I64PopCntInstruction,
        I64ADD to I64AddInstruction,
        I64SUB to I64SubInstruction,
        I64MUL to I64MulInstruction,
        I64DIVS to I64DivSInstruction,
        I64DIVU to I64DivUInstruction,
        I64REMS to I64RemSInstruction,
        I64REMU to I64RemUInstruction,
        I64AND to I64AndInstruction,
        I64OR to I64OrInstruction,
        I64XOR to I64XorInstruction,
        I64SHL to I64ShlInstruction,
        I64SHRS to I64ShrsInstruction,
        I64SHRU to I64ShruInstruction,
        I64ROTL to I64RotlInstruction,
        I64ROTR to I64RotrInstruction,
        F32ABS to F32AbsInstruction,
        F32NEG to F32NegInstruction,
        F32CEIL to F32CeilInstruction,
        F32FLOOR to F32FloorInstruction,
        F32TRUNC to F32TruncInstruction,
        F32NEAREST to F32NearestIntstruction,
        F32SQRT to F32SqrtInstruction,
        F32ADD to F32AddInstruction,
        F32SUB to F32SubInstruction,
        F32MUL to F32MulInstruction,
        F32DIV to F32DivInstruction,
        F32MIN to F32MinInstruction,
        F32MAX to F32MaxInstruction,
        F32COPYSIGN to F32CopySignInstruction,
        F64ABS to F64AbsInstruction,
        F64NEG to F64NegInstruction,
        F64CEIL to F64CeilInstruction,
        F64FLOOR to F64FloorInstruction,
        F64TRUNC to F64TruncInstruction,
        F64NEAREST to F64NearestIntstruction,
        F64SQRT to F64SqrtInstruction,
        F64ADD to F64AddInstruction,
        F64SUB to F64SubInstruction,
        F64MUL to F64MulInstruction,
        F64DIV to F64DivInstruction,
        F64MIN to F64MinInstruction,
        F64MAX to F64MaxInstruction,
        F64COPYSIGN to F64CopySignInstruction,

        I32WRAPI64 to I32WrapI64Instruction,
        I32TRUNCSF32 to I32TruncSF32Instruction,
        I32TRUNCUF32 to I32TruncUF32Instruction,
        I32TRUNCSF64 to I32TruncSF64Instruction,
        I32TRUNCUF64 to I32TruncUF64Instruction,
        I64EXTENDSI32 to I64ExtendSI32Instruction,
        I64EXTENDUI32 to I64ExtendUI32Instruction,
        I64TRUNCSF32 to I64TruncSF32Instruction,
        I64TRUNCUF32 to I64TruncUF32Instruction,
        I64TRUNCSF64 to I64TruncSF64Instruction,
        I64TRUNCUF64 to I64TruncUF64Instruction,

        F32CONVERTSI32 to F32ConvertSI32Instruction,
        F32CONVERTUI32 to F32ConvertUI32Instruction,
        F32CONVERTSI64 to F32ConvertSI64Instruction,
        F32CONVERTUI64 to F32ConvertUI64Instruction,
        F32DEMOTEF64 to F32DemoteF64Instruction,

        F64CONVERTSI32 to F64ConvertSI32Instruction,
        F64CONVERTUI32 to F64ConvertUI32Instruction,
        F64CONVERTSI64 to F64ConvertSI64Instruction,
        F64CONVERTUI64 to F64ConvertUI64Instruction,
        F64PROMOTEF32 to F64PromoteF32Instruction,

        I32REINTERPRETF32 to I32ReinterpretF32Instruction,
        I64REINTERPRETF64 to I64ReinterpretF64Instruction,
        F32REINTERPRETI32 to F32ReinterpretI32Instruction,
        F64REINTERPRETI64 to F64ReinterpretI64Instruction
)

val TYPE_PARAMETRIC_INSTRUCTIONS = mapOf<InstructionType, KClass<out Instruction>>(
        I32EQ to BinaryComparison::class,
        I32NE to BinaryComparison::class,
        I32LTS to BinaryComparison::class,
        I32LTU to BinaryComparison::class,
        I32GTS to BinaryComparison::class,
        I32GTU to BinaryComparison::class,
        I32LES to BinaryComparison::class,
        I32LEU to BinaryComparison::class,
        I32GES to BinaryComparison::class,
        I32GEU to BinaryComparison::class,
        I64EQ to BinaryComparison::class,
        I64NE to BinaryComparison::class,
        I64LTS to BinaryComparison::class,
        I64LTU to BinaryComparison::class,
        I64GTS to BinaryComparison::class,
        I64GTU to BinaryComparison::class,
        I64LES to BinaryComparison::class,
        I64LEU to BinaryComparison::class,
        I64GES to BinaryComparison::class,
        I64GEU to BinaryComparison::class,
        F32EQ to BinaryComparison::class,
        F32NE to BinaryComparison::class,
        F32LT to BinaryComparison::class,
        F32GT to BinaryComparison::class,
        F32LE to BinaryComparison::class,
        F32GE to BinaryComparison::class,
        F64EQ to BinaryComparison::class,
        F64NE to BinaryComparison::class,
        F64LT to BinaryComparison::class,
        F64GT to BinaryComparison::class,
        F64LE to BinaryComparison::class,
        F64GE to BinaryComparison::class)